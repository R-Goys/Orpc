<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="cc1841bc-b531-49f9-bea9-1c4fc69bd5dd" name="更改" comment="实现服务发现与注册中心，至此完结✨">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/example/main7/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/example/main7/main.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.24.0.windows-amd64" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Rinai-R&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/R-Goys/Orpc.git&quot;,
    &quot;accountId&quot;: &quot;61d5a169-71ef-4d7d-af66-3b0737a09887&quot;
  }
}</component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2u6vYf0fQkBP3jSsjKSBM6x64Ql" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Go 构建.go build github.com/R-Goys/Orpc/example/main1.executor": "Run",
    "Go 构建.go build github.com/R-Goys/Orpc/example/main2.executor": "Run",
    "Go 构建.go build main.go (1).executor": "Run",
    "Go 构建.go build main.go (2).executor": "Run",
    "Go 构建.go build main.go (3).executor": "Run",
    "Go 构建.go build main.go (4).executor": "Run",
    "Go 构建.go build main.go.executor": "Run",
    "Go 测试.github.com/R-Goys/Orpc/example/servicetest 中的 Test_Service.executor": "Run",
    "Go 测试.http_test.go.executor": "Run",
    "Go 测试.service_test.go.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "C:/Users/chenyue",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "run.configurations.included.in.services": "true",
    "settings.editor.selected.configurable": "configurable.group.appearance"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\chenyue\Desktop\PrOJECT\Orpc\server" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="GoApplicationRunConfiguration" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Go 构建.go build main.go (4)">
    <configuration name="go build main.go (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Orpc" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/R-Goys/Orpc" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/example/main4/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go (2)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Orpc" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/R-Goys/Orpc" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/example/main5/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go (3)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Orpc" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/R-Goys/Orpc" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/example/main6/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go (4)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Orpc" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/R-Goys/Orpc" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/example/main7/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Orpc" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/R-Goys/Orpc" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/example/main3/main.go" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go 构建.go build main.go (4)" />
        <item itemvalue="Go 构建.go build main.go (3)" />
        <item itemvalue="Go 构建.go build main.go (2)" />
        <item itemvalue="Go 构建.go build main.go" />
        <item itemvalue="Go 构建.go build main.go (1)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-d297c17c1fbd-57c114c3cede-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-243.25659.52" />
        <option value="bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-GO-243.25659.52" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="main" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="完成day1，基本的数据发送和信息编码" />
    <MESSAGE value="实现day2的客户端" />
    <MESSAGE value="实现day3的服务注册并调用" />
    <MESSAGE value="readme" />
    <MESSAGE value="支持自定义超时操作" />
    <MESSAGE value="支持HTTP协议" />
    <MESSAGE value="实现随机和轮询方式的负载均衡策略" />
    <MESSAGE value="实现服务发现与注册中心，至此完结✨" />
    <option name="LAST_COMMIT_MESSAGE" value="实现服务发现与注册中心，至此完结✨" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>